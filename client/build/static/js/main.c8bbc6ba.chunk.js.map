{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.js","pages/AuthPage.js","hooks/message.hook.js","components/LinkCard.js","pages/DetailPage.js","pages/CreatePage.js","routes/routes.js","components/Navbar.js","components/App.js","hooks/auth.hook.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","async","method","body","headers","JSON","stringify","fetch","responce","json","data","ok","Error","message","cleanError","noop","AuthContext","createContext","token","userId","login","logout","isAuth","Loader","style","textAlign","className","LinksList","links","length","map","item","idx","key","from","to","_id","LinksPage","setLinks","getToken","useContext","getLinks","Authorization","useEffect","AuthPage","email","password","form","setForm","text","window","M","toast","html","auth","changeHandler","event","target","name","value","id","type","onChange","htmlFor","onClick","console","log","disabled","LinkCard","link","Fragment","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","setLink","linkId","useParams","getLink","CreatePage","history","useHistory","e","onKeyPress","push","useRoutes","path","exact","Navbar","padding","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","now","removeItem","parse","getItem","timeNow","difference","useAuth","routes","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8bbc6ba.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n            if(body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            const responce = await fetch(url, { method, body, headers });\r\n            const data = await responce.json();\r\n\r\n            if(!responce.ok) {\r\n                setLoading(false);\r\n                throw new Error(data.message || 'Запрос не прошел успешно...');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const cleanError = () => setError(null);\r\n\r\n    return {\r\n        loading,\r\n        request,\r\n        error,\r\n        cleanError\r\n    }\r\n\r\n};","import {createContext} from 'react';\r\n\r\nconst noop = () => {\r\n\r\n};\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuth: false\r\n});","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <div className=\"preloader-wrapper big active\" >\r\n                <div className=\"spinner-layer spinner-blue-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gap-patch\">\r\n                        <div className=\"circle\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"circle-clipper right\">\r\n                        <div className=\"circle\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst LinksList = ({ links }) => {\r\n    if(!links.length) return <p className=\"center\">Ссылок нету.</p>;\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Оригинальная</th>\r\n                    <th>Сокращенная</th>\r\n                    <th>Открыть</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {links.map((item, idx) => {\r\n                    return (\r\n                        <tr key={idx}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{item.from}</td>\r\n                            <td>{item.to}</td>\r\n                            <td><Link to={`/detail/${item._id}`}>Открыть</Link></td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default LinksList;","import React, { useState, useCallback, useContext, useEffect } from 'react';\r\nimport {useHttp} from './../hooks/http.hook';\r\nimport {AuthContext} from './../context/AuthContext';\r\nimport Loader from './../components/Loader';\r\nimport LinksList from './../components/LinksList';\r\n\r\nconst LinksPage = () => {\r\n\r\n    const [links, setLinks] = useState();\r\n    const {loading, request} = useHttp();\r\n    const {getToken} = useContext(AuthContext);\r\n\r\n    const getLinks = useCallback(async () => {\r\n        try {\r\n            const data = await request('/api/link', 'GET', null, {\r\n                Authorization: `Bearer ${getToken()}`\r\n            });\r\n            setLinks(data);\r\n        } catch(e) {\r\n\r\n        }\r\n    }, [request, getToken]);\r\n\r\n    useEffect(() => {\r\n        getLinks();\r\n    }, [getLinks]);\r\n\r\n    if(loading) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n            {!loading && links && <LinksList links={links} />}\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default LinksPage;","import React, {useState, useEffect, useContext} from 'react';\r\nimport {useHttp} from '../hooks/http.hook';\r\nimport {useMessage} from '../hooks/message.hook';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst AuthPage = () => {\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    });\r\n\r\n    const {request, error, loading, cleanError} = useHttp();\r\n    const message = useMessage();\r\n    const auth = useContext(AuthContext);\r\n    //с помощью AuthContex (Provider) в компоненте App передали\r\n    //объект с свойствами и ф-циями (login, logout, token, userId и т.д.).\r\n    //А с помощью хука useConext перехватываем объект, в качестве аргумента указываем,\r\n    //какой именно нам нужен контекст\r\n\r\n    useEffect(() => {\r\n        message(error);\r\n        cleanError();\r\n    }, [error, message, cleanError]);\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form});\r\n            message(data.message);\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form});\r\n            message(data.message);\r\n            auth.login(data.token, data.userId);\r\n            //по нажатию на кнопку делаем api запрос, отсылаем состояние формы\r\n            //если без ошибок, то выводим message и посылаем id и token в метод login\r\n            //и он сохраняет полученные данные в localeStorage\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // state = {\r\n    //     form: {\r\n    //         email: '',\r\n    //         password: ''\r\n    //     }\r\n    // }\r\n    // setState({\r\n    //     form: {\r\n    //         ...this.state.form,\r\n    //         [event.target.name]: event.target.value\r\n    //     }\r\n    // })\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12\">\r\n                <h1>Сократи ссылку</h1>\r\n                <div className=\"card blue-grey darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div className=\"input-field\">\r\n                            <input \r\n                                id=\"email\" \r\n                                type=\"email\" \r\n                                name=\"email\"\r\n                                className=\"validate\"\r\n                                value={form.email}\r\n                                onChange={changeHandler} />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <input \r\n                                id=\"password\" \r\n                                type=\"password\" \r\n                                name=\"password\"\r\n                                className=\"validate\"\r\n                                value={form.password}\r\n                                onChange={changeHandler} />\r\n                            <label htmlFor=\"password\">Пароль</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button \r\n                            className=\"btn yellow darken-1 button-login\"\r\n                            onClick={loginHandler}\r\n                            disabled={loading}>\r\n                            Войти\r\n                        </button>\r\n                        <button \r\n                            className=\"btn gray lighten-1 dark-text\"\r\n                            onClick={registerHandler}\r\n                            disabled={loading}>\r\n                            Регистрация\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n              \r\n    )\r\n};\r\n\r\nexport default AuthPage;","import {useCallback} from 'react';\r\n\r\nexport const useMessage = () => {\r\n    return useCallback((text) => {\r\n        if(window.M && text) {\r\n            window.M.toast({ html: text });\r\n        }\r\n    }, []);\r\n};","import React from 'react';\r\n\r\nconst LinkCard = ({ link }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Ссылка:</h2>\r\n            <p>Ваша ссылка:\r\n                <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\"> {link.to}</a>\r\n            </p>\r\n            <p>Откуда: \r\n                <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\"> {link.from}</a>\r\n            </p>\r\n            <p>Колличество кликов по ссылке: <strong> {link.clicks}</strong></p>\r\n            <p>Дата создания: <strong> {new Date(link.date).toLocaleDateString()}</strong></p>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default LinkCard;","import React, { useCallback, useContext, useState, useEffect } from 'react';\r\nimport {useHttp} from './../hooks/http.hook';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Loader from './../components/Loader';\r\nimport LinkCard from './../components/LinkCard';\r\n\r\nconst DetailPage = () => {\r\n\r\n    const [link, setLink] = useState();\r\n    const {request, loading} = useHttp();\r\n    const linkId = useParams().id;\r\n    const {getToken} = useContext(AuthContext);\r\n    \r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const data = await request(`/api/link/${linkId}`, 'GET', null, {\r\n                Authorization: `Bearer ${getToken()}`\r\n            });\r\n            setLink(data);\r\n        } catch(e) {\r\n\r\n        }\r\n    }, [getToken, linkId, request]);\r\n\r\n    useEffect(() => {\r\n        getLink();\r\n    }, [getLink]);\r\n\r\n    if(loading) return <Loader />;\r\n\r\n    return(\r\n        <>\r\n            {!loading && link && <LinkCard link={link} />}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default DetailPage;","import React, {useState, useContext} from 'react';\r\nimport {useHttp} from './../hooks/http.hook';\r\nimport {AuthContext} from './../context/AuthContext';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst CreatePage = () => {\r\n\r\n    const [link, setLink] = useState('');\r\n    const {request} = useHttp();\r\n    const auth = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const pressHandler = async (event) => {\r\n        if(event.key === 'Enter') {\r\n            try {\r\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n                    Authorization: `Bearer ${auth.getToken()}`\r\n                });\r\n                history.push(`/detail/${data.link._id}`);\r\n            } catch(e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12\">\r\n                <div className=\"card blue-grey darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Хочешь сократить ссылку?</span>\r\n                        <div className=\"input-field\">\r\n                            <input \r\n                                id=\"link\" \r\n                                type=\"text\"\r\n                                className=\"validate\"\r\n                                value={link}\r\n                                onChange={(e) => setLink(e.target.value)}\r\n                                onKeyPress={pressHandler} />\r\n                            <label htmlFor=\"link\">Вставьте ссылку</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreatePage;","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport LinksPage from './../pages/LinksPage';\r\nimport AuthPage from './../pages/AuthPage';\r\nimport DetailPage from './../pages/DetailPage';\r\nimport CreatePage from './../pages/CreatePage';\r\n\r\nconst useRoutes = isAuth => {\r\n    if(isAuth) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage />\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage />\r\n                </Route>\r\n                <Route path=\"/detail/:id\">\r\n                    <DetailPage />\r\n                </Route>\r\n                <Redirect to=\"/create\" />\r\n            </Switch>\r\n        )\r\n    } else {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <AuthPage />\r\n                </Route>\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        )     \r\n    }\r\n}\r\n\r\nexport default useRoutes;","import React, {useContext} from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const linkLogout = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue\" style={{padding: '0 2rem'}}>\r\n        <span className=\"brand-logo\">Сократить ссылки</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n          <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n          <li>\r\n            <a \r\n              href=\"/\"\r\n              onClick={linkLogout}>\r\n              Выйти\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport useRoutes from '../routes/routes';\nimport { useAuth } from '../hooks/auth.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport '../index.css';\nimport 'materialize-css';\n\nfunction App() {\n  const {login, logout, token, userId, ready, getToken} = useAuth();\n  const isAuth = token ? true : false;\n  const routes = useRoutes(isAuth);\n  if(!ready) return <Loader />;\n  return (\n    <AuthContext.Provider value={{login, logout, token, userId, isAuth, getToken}}>\n      <Router>\n        {isAuth ? <Navbar /> : null}\n        <div className=\"container\">\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;","import {useState, useCallback, useEffect} from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n    const [ready, setReady] = useState(false);\r\n\r\n    const login = useCallback((jwtToken, id, date) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken, date: date || Date.now()\r\n        }));\r\n\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    const getToken = useCallback(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n        return data.token;\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n        const timeNow = Date.now();\r\n        if(data && data.date) {\r\n            const difference = timeNow - data.date;\r\n            console.log(difference);\r\n            const hour = 60 * 60 * 1000;\r\n            if(!(difference > hour)) {\r\n                if(data.token) {\r\n                    login(data.token, data.userId, data.date);\r\n                }\r\n            } else {\r\n                logout();\r\n            }\r\n        }\r\n        setReady(true);\r\n    }, [login, logout]);\r\n\r\n    return {\r\n        login,\r\n        logout,\r\n        token,\r\n        userId,\r\n        ready,\r\n        getToken\r\n    }\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}